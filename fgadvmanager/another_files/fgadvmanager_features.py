import base64;exec(base64.b64decode('# FGADVManager Features - Функциональность и меню
# Owners: @FGBruh and @BruhYouTeeth

import asyncio
import logging
import os
import json
from datetime import datetime, timedelta
import sys

from telethon import functions

logger = logging.getLogger(__name__)


def get_colors_and_utils():
    import fgadvmanager_main as main_module
    return main_module.Colors, main_module.clear_screen


Colors, clear_screen = get_colors_and_utils()


class MessageHandler:
    def __init__(self, manager):
        self.manager = manager

    async def messages_menu(self):
        while True:
            clear_screen()

            messages_header = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                 📱 УПРАВЛЕНИЕ СООБЩЕНИЯМИ                                  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(messages_header)

            messages_menu_items = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 💬 Отправить сообщение{'':<58}  
  2. 📤 Массовая отправка{'':<62}  
  3. 📢 Массовая рассылка везде{'':<54}  
  4. ↗️  Пересылка сообщений{'':<58}  
  5. 🔍 Поиск сообщений{'':<63}  
  6. 📥 Экспорт истории чата{'':<56}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(messages_menu_items)

            choice = input(f"{Colors.MAGENTA}🎯 Выбор: {Colors.RESET}")
            choice = choice.strip()

            if choice == "1":
                await self.send_message()
            elif choice == "2":
                await self.bulk_send()
            elif choice == "3":
                await self.mass_broadcast()
            elif choice == "4":
                await self.forward_messages()
            elif choice == "5":
                await self.search_messages()
            elif choice == "6":
                await self.export_chat_history()
            elif choice == "0":
                break

    async def send_message(self):
        clear_screen()

        send_header = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                   💬 ОТПРАВКА СООБЩЕНИЯ                                    
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(send_header)

        chat = input(
            f"{Colors.CYAN}🎯 Введите username/ID чата: {Colors.RESET}"
        ).strip()
        if not chat:
            return

        message = input(f"{Colors.CYAN}📝 Текст сообщения: {Colors.RESET}")

        try:
            entity = await self.manager.client.get_entity(chat)
            await self.manager.client.send_message(entity, message)

            recipient_name = getattr(
                entity, "title", getattr(entity, "first_name", "Unknown")
            )
            message_display = (
                message[:70] if len(message) <= 70 else message[:67] + "..."
            )

            success_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                 ✅ СООБЩЕНИЕ ОТПРАВЛЕНО                                    
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Получатель: {recipient_name[:79]:<79}  
  Сообщение:  {message_display:<79}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(success_box)
            logger.info(f"Отправлено сообщение в {chat}")
        except Exception as e:
            error_str = str(e)[:79]
            error_box = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                   ❌ Ошибка отправки                                       
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  {error_str:<90}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(error_box)

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения..."
              f"{Colors.RESET}")

    async def mass_broadcast(self):
        clear_screen()

        broadcast_header = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               📢 МАССОВАЯ РАССЫЛКА ВЕЗДЕ                                   
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
                      ⚠️ Это отправит сообщение во ВСЕ ваши чаты!{'':<25}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(broadcast_header)

        message = input(f"{Colors.CYAN}📝 Текст сообщения: {Colors.RESET}")
        if not message:
            return

        delay = float(
            input(
                f"{Colors.CYAN}⏰ Задержка между отправками (сек, мин 1): "
                f"{Colors.RESET}"
            )
            or "1"
        )
        if delay < 1:
            delay = 1

        confirm = input(
            f"{Colors.RED}⚠️ Подтвердите массовую рассылку (y/N): "
            f"{Colors.RESET}"
        ).lower()
        if confirm not in ["y", "yes"]:
            return

        try:
            dialogs = await self.manager.client.get_dialogs()
            success_count = 0
            total_count = len(dialogs)

            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                            🚀 Начинаем рассылку в {total_count} чатов{'':<34}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)

            for i, dialog in enumerate(dialogs, 1):
                try:
                    await self.manager.client.send_message(dialog.entity, message)
                    chat_name = getattr(
                        dialog.entity,
                        "title",
                        getattr(dialog.entity, "first_name", "Unknown"),
                    )
                    chat_display = (
                        chat_name[:40]
                        if len(chat_name) <= 40
                        else chat_name[:37] + "..."
                    )

                    success_message = (
                        f"✅ {i}/{total_count} Отправлено в: {chat_display}"
                    )
                    print(f"{Colors.GREEN}{success_message}{Colors.RESET}")
                    success_count += 1

                    if i < total_count:
                        await asyncio.sleep(delay)

                except Exception as e:
                    chat_name = getattr(
                        dialog.entity,
                        "title",
                        getattr(dialog.entity, "first_name", "Unknown"),
                    )
                    chat_display = (
                        chat_name[:30]
                        if len(chat_name) <= 30
                        else chat_name[:27] + "..."
                    )
                    error_display = (
                        str(e)[:20] if len(str(e)) <= 20 else str(e)[:17] + "..."
                    )

                    error_message = (
                        f"❌ {i}/{total_count} Ошибка в {chat_display}: "
                        f"{error_display}"
                    )
                    print(f"{Colors.RED}{error_message}{Colors.RESET}")

            final_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               ✅ РАССЫЛКА ЗАВЕРШЕНА                                        
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Успешно:   {success_count}/{total_count:<82}  
  Неудачно:  {total_count - success_count}/{total_count:<82}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(final_box)

        except Exception as e:
            error_str = str(e)[:80]
            error_box = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               ❌ Ошибка массовой рассылки                                  
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  {error_str:<90}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(error_box)

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения..."
              f"{Colors.RESET}")

    async def bulk_send(self):
        clear_screen()

        bulk_header = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                 📤 МАССОВАЯ ОТПРАВКА                                       
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(bulk_header)

        message = input(f"{Colors.CYAN}📝 Текст сообщения: {Colors.RESET}")
        if not message:
            return

        print(f"{Colors.YELLOW}📋 Введите получателей (по одному в строке, пустая строка для завершения):{Colors.RESET}")

        recipients = []
        while True:
            recipient = input(f"{Colors.CYAN}🎯 Получатель (username/ID): {Colors.RESET}").strip()
            if not recipient:
                break
            recipients.append(recipient)

        if not recipients:
            print(f"{Colors.RED}❌ Список получателей пуст{Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
            return

        delay = float(input(f"{Colors.CYAN}⏰ Задержка между отправками (сек, мин 1): {Colors.RESET}") or "1")
        if delay < 1:
            delay = 1

        progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                            🚀 Начинаем отправку в {len(recipients)} чатов{'':<32}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(progress_box)

        success_count = 0
        failed_count = 0

        for i, recipient in enumerate(recipients, 1):
            try:
                entity = await self.manager.client.get_entity(recipient)
                await self.manager.client.send_message(entity, message)

                recipient_name = getattr(entity, "title", getattr(entity, "first_name", recipient))
                print(f"{Colors.GREEN}✅ {i}/{len(recipients)} Отправлено: {recipient_name[:40]}{Colors.RESET}")
                success_count += 1

                if i < len(recipients):
                    await asyncio.sleep(delay)

            except Exception as e:
                print(f"{Colors.RED}❌ {i}/{len(recipients)} Ошибка {recipient}: {str(e)[:30]}{Colors.RESET}")
                failed_count += 1

        final_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               ✅ ОТПРАВКА ЗАВЕРШЕНА                                        
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Успешно:   {success_count}/{len(recipients):<82}  
  Неудачно:  {failed_count}/{len(recipients):<82}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(final_box)

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def forward_messages(self):
        clear_screen()

        forward_header = f"""
{Colors.MAGENTA}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                 ↗️ ПЕРЕСЫЛКА СООБЩЕНИЙ                                     
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(forward_header)

        source_chat = input(f"{Colors.CYAN}📥 Чат-источник (username/ID): {Colors.RESET}").strip()
        if not source_chat:
            return

        try:

            source_entity = await self.manager.client.get_entity(source_chat)


            messages = await self.manager.client.get_messages(source_entity, limit=20)

            if not messages:
                print(f"{Colors.RED}❌ Сообщения не найдены{Colors.RESET}")
                input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
                return

            print(f"\n{Colors.BLUE}📋 Последние сообщения:{Colors.RESET}")
            for i, msg in enumerate(messages, 1):
                text = msg.text or "[Media/Файл]"
                text_preview = text[:50] + "..." if len(text) > 50 else text
                date_str = msg.date.strftime("%d.%m %H:%M")
                print(f"{Colors.CYAN}{i:2d}. {date_str} - {text_preview}{Colors.RESET}")


            try:
                msg_choice = int(input(f"\n{Colors.CYAN}🎯 Номер сообщения для пересылки: {Colors.RESET}"))
                if not (1 <= msg_choice <= len(messages)):
                    raise ValueError()
                selected_message = messages[msg_choice - 1]
            except (ValueError, IndexError):
                print(f"{Colors.RED}❌ Неверный номер сообщения{Colors.RESET}")
                input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
                return

            print(
                f"\n{Colors.YELLOW}📋 Введите получателей (по одному в строке, пустая строка для завершения):{Colors.RESET}")

            recipients = []
            while True:
                recipient = input(f"{Colors.CYAN}🎯 Получатель: {Colors.RESET}").strip()
                if not recipient:
                    break
                recipients.append(recipient)

            if not recipients:
                print(f"{Colors.RED}❌ Список получателей пуст{Colors.RESET}")
                input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
                return

            success_count = 0
            for recipient in recipients:
                try:
                    target_entity = await self.manager.client.get_entity(recipient)
                    await self.manager.client.forward_messages(target_entity, selected_message)
                    print(f"{Colors.GREEN}✅ Переслано в: {recipient}{Colors.RESET}")
                    success_count += 1
                    await asyncio.sleep(1)
                except Exception as e:
                    print(f"{Colors.RED}❌ Ошибка пересылки в {recipient}: {str(e)[:40]}{Colors.RESET}")

            result_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              ✅ ПЕРЕСЫЛКА ЗАВЕРШЕНА                                        
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Успешно переслано: {success_count}/{len(recipients):<68}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(result_box)

        except Exception as e:
            error_box = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                   ❌ Ошибка пересылки                                      
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  {str(e)[:90]:<90}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(error_box)

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def search_messages(self):
        clear_screen()

        search_header = f"""
{Colors.YELLOW}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  🔍 ПОИСК СООБЩЕНИЙ                                        
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(search_header)

        search_query = input(f"{Colors.CYAN}🔍 Поисковый запрос: {Colors.RESET}").strip()
        if not search_query:
            return

        chat_input = input(f"{Colors.CYAN}📂 Чат для поиска (пусто = везде): {Colors.RESET}").strip()

        limit = int(input(f"{Colors.CYAN}📊 Максимум результатов (по умолчанию 50): {Colors.RESET}") or "50")

        try:
            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               🔍 Выполняется поиск...                                      
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)

            found_messages = []

            if chat_input:
                entity = await self.manager.client.get_entity(chat_input)
                async for message in self.manager.client.iter_messages(entity, search=search_query, limit=limit):
                    if message.text and search_query.lower() in message.text.lower():
                        found_messages.append((message, entity))
            else:
                dialogs = await self.manager.client.get_dialogs(limit=100)

                for dialog in dialogs:
                    try:
                        async for message in self.manager.client.iter_messages(dialog.entity, search=search_query,
                                                                               limit=10):
                            if message.text and search_query.lower() in message.text.lower():
                                found_messages.append((message, dialog.entity))
                                if len(found_messages) >= limit:
                                    break
                    except Exception:
                        continue

                    if len(found_messages) >= limit:
                        break

            if not found_messages:
                no_results_box = f"""
{Colors.YELLOW}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                📭 Результаты не найдены                                    
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(no_results_box)
            else:
                results_header = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                            📋 НАЙДЕНО {len(found_messages)} СООБЩЕНИЙ                        
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(results_header)

                for i, (message, entity) in enumerate(found_messages, 1):
                    chat_name = getattr(entity, "title", getattr(entity, "first_name", "Unknown"))
                    date_str = message.date.strftime("%d.%m.%Y %H:%M")
                    text_preview = message.text[:80] + "..." if len(message.text) > 80 else message.text

                    message_box = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  {i:2d}. 📅 {date_str} | 💬 {chat_name[:30]:<30} | ID: {message.id}
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
     📝 {text_preview:<84}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                    """
                    print(message_box)

        except Exception as e:
            error_box = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                    ❌ Ошибка поиска                                        
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  {str(e)[:90]:<90}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(error_box)

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def export_chat_history(self):
        clear_screen()

        export_header = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                📥 ЭКСПОРТ ИСТОРИИ ЧАТА                                     
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(export_header)

        chat_input = input(f"{Colors.CYAN}📂 Чат для экспорта (username/ID): {Colors.RESET}").strip()
        if not chat_input:
            return

        limit = int(input(f"{Colors.CYAN}📊 Количество сообщений (по умолчанию 1000): {Colors.RESET}") or "1000")

        format_choice = input(f"{Colors.CYAN}📄 Формат экспорта (1-TXT, 2-JSON): {Colors.RESET}") or "1"

        try:
            entity = await self.manager.client.get_entity(chat_input)
            chat_name = getattr(entity, "title", getattr(entity, "first_name", "Unknown"))

            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               📥 Экспортируется {chat_name[:30]:<30}...  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)


            messages = []
            async for message in self.manager.client.iter_messages(entity, limit=limit):
                sender_name = "Unknown"
                if message.sender:
                    sender_name = getattr(message.sender, "first_name", "Unknown")
                    if hasattr(message.sender, "last_name") and message.sender.last_name:
                        sender_name += f" {message.sender.last_name}"

                message_data = {
                    "id": message.id,
                    "date": message.date.strftime("%Y-%m-%d %H:%M:%S"),
                    "sender": sender_name,
                    "text": message.text or "[Media/File]",
                    "media_type": "text" if message.text else "media"
                }
                messages.append(message_data)

            if not messages:
                print(f"{Colors.RED}❌ Сообщения не найдены{Colors.RESET}")
                input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
                return

            import os
            from datetime import datetime

            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            safe_chat_name = "".join(c for c in chat_name if c.isalnum() or c in (' ', '-', '_')).rstrip()

            if format_choice == "2":

                import json
                filename = f"export_{safe_chat_name}_{timestamp}.json"

                export_data = {
                    "chat_name": chat_name,
                    "export_date": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
                    "total_messages": len(messages),
                    "messages": messages
                }

                with open(filename, 'w', encoding='utf-8') as f:
                    json.dump(export_data, f, ensure_ascii=False, indent=2)
            else:
                filename = f"export_{safe_chat_name}_{timestamp}.txt"

                with open(filename, 'w', encoding='utf-8') as f:
                    f.write(f"=== ЭКСПОРТ ЧАТА: {chat_name} ===\n")
                    f.write(f"Дата экспорта: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
                    f.write(f"Всего сообщений: {len(messages)}\n")
                    f.write("=" * 50 + "\n\n")

                    for msg in reversed(messages):
                        f.write(f"[{msg['date']}] {msg['sender']}: {msg['text']}\n\n")

            success_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               ✅ ЭКСПОРТ ЗАВЕРШЕН                                          
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Файл:       {filename:<77}  
  Сообщений:  {len(messages):<77}  
  Размер:     {os.path.getsize(filename) / 1024:.1f} KB{'':<66}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(success_box)

        except Exception as e:
            error_box = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                   ❌ Ошибка экспорта                                       
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  {str(e)[:90]:<90}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(error_box)

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")


class SecurityHandler:
    def __init__(self, manager):
        self.manager = manager

    async def security_menu(self):
        while True:
            clear_screen()

            security_header = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                             🔒 БЕЗОПАСНОСТЬ И ПРИВАТНОСТЬ                                  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(security_header)

            security_menu_items = f"""
{Colors.MAGENTA}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 🔐 Активные сессии{'':<62}  
  2. 🔒 Завершить другие сессии{'':<54}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(security_menu_items)

            choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

            if choice == "1":
                await self.show_active_sessions()
            elif choice == "2":
                await self.terminate_other_sessions()
            elif choice == "0":
                break

    async def show_active_sessions(self):
        clear_screen()

        try:
            result = await self.manager.client(
                functions.account.GetAuthorizationsRequest())

            sessions_header = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  🔐 АКТИВНЫЕ СЕССИИ                                       
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(sessions_header)

            for i, auth in enumerate(result.authorizations, 1):
                current_mark = " [ТЕКУЩАЯ]" if auth.current else ""
                device_info = (f"{auth.device_model} - "
                               f"{auth.platform}{current_mark}")
                device_display = (
                    device_info[:79]
                    if len(device_info) <= 79
                    else device_info[:76] + "..."
                )

                session_box = f"""
{Colors.GREEN if auth.current else Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  {i}. {device_display:<85}  
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
     IP: {auth.ip:<30} Страна: {auth.country:<44}  
     Последняя активность: {str(auth.date_active):<64}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(session_box)

        except Exception as e:
            error_str = str(e)[:80]
            error_box = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               ❌ Ошибка получения сессий                                   
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  {error_str:<90}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(error_box)

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения..."
              f"{Colors.RESET}")

    async def terminate_other_sessions(self):
        warning_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                          🔐 ЗАВЕРШЕНИЕ ДРУГИХ СЕССИЙ                                       
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫

  Это завершит все другие активные сессии, кроме текущей терминальной                       

┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(warning_box)

        confirm = input(
            f"{Colors.YELLOW}⚠️ Завершить все другие активные сессии? "
            f"(y/N): {Colors.RESET}"
        ).lower()
        if confirm in ["y", "yes"]:
            try:
                result = await self.manager.client(
                    functions.account.GetAuthorizationsRequest())
                current_hash = None

                for auth in result.authorizations:
                    if auth.current:
                        current_hash = auth.hash
                        break

                terminated_count = 0
                for auth in result.authorizations:
                    if not auth.current and auth.hash != current_hash:
                        try:
                            await self.manager.client(
                                functions.account.ResetAuthorizationRequest(
                                    hash=auth.hash
                                )
                            )
                            terminated_count += 1
                            print(f"{Colors.GREEN}✅ Завершена сессия: "
                                  f"{auth.device_model}{Colors.RESET}")
                        except Exception as e:
                            print(f"{Colors.RED}❌ Ошибка завершения сессии "
                                  f"{auth.device_model}: {e}{Colors.RESET}")

                result_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              ✅ Завершено {terminated_count} других сессий{'':<42}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(result_box)

            except Exception as e:
                print(f"{Colors.RED}❌ Ошибка завершения других сессий: {e}"
                      f"{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения..."
              f"{Colors.RESET}")


class MenuHandler:
    def __init__(self, manager):
        self.manager = manager

    async def open_chat(self):
        clear_screen()

        chat_header = f"""
{Colors.MAGENTA}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  💬 ПРОСМОТР ЧАТА                                         
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(chat_header)

        chat_input = input(f"{Colors.CYAN}💬 Введите username/ID чата: {Colors.RESET}").strip()
        if not chat_input:
            return

        try:
            entity = await self.manager.client.get_entity(chat_input)
            chat_name = getattr(entity, "title", getattr(entity, "first_name", "Unknown"))

            while True:
                clear_screen()

                chat_info_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                💬 ЧАТ: {chat_name[:50]:<50}          
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(chat_info_box)

                messages = await self.manager.client.get_messages(entity, limit=15)

                if messages:
                    for message in reversed(messages):
                        sender_name = "Unknown"
                        if message.sender:
                            sender_name = getattr(message.sender, "first_name", "Unknown")

                        text = message.text or "[Media/File]"
                        time_str = message.date.strftime("%H:%M")

                        if len(text) > 60:
                            text = text[:57] + "..."

                        message_box = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  [{time_str}] {sender_name[:20]:<20} | {text:<60}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                        """
                        print(message_box)
                else:
                    print(f"{Colors.YELLOW}📭 Сообщения не найдены{Colors.RESET}")

                actions_box = f"""
{Colors.YELLOW}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                     ДЕЙСТВИЯ                                              
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  1. 📝 Отправить сообщение{'':<58}  
  2. 🔄 Обновить чат{'':<66}  
  3. 📋 Показать больше сообщений{'':<51}  
  4. ℹ️  Информация о чате{'':<59}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(actions_box)

                choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

                if choice == "1":
                    message_text = input(f"{Colors.CYAN}📝 Текст сообщения: {Colors.RESET}")
                    if message_text:
                        try:
                            await self.manager.client.send_message(entity, message_text)
                            print(f"{Colors.GREEN}✅ Сообщение отправлено{Colors.RESET}")
                            await asyncio.sleep(1)
                        except Exception as e:
                            print(f"{Colors.RED}❌ Ошибка отправки: {e}{Colors.RESET}")
                            input(f"{Colors.YELLOW}Нажмите Enter...{Colors.RESET}")

                elif choice == "2":
                    continue

                elif choice == "3":
                    more_messages = await self.manager.client.get_messages(entity, limit=50)

                    print(f"\n{Colors.BLUE}📋 История сообщений:{Colors.RESET}")
                    for msg in reversed(more_messages):
                        sender_name = "Unknown"
                        if msg.sender:
                            sender_name = getattr(msg.sender, "first_name", "Unknown")

                        text = msg.text or "[Media/File]"
                        date_str = msg.date.strftime("%d.%m %H:%M")

                        if len(text) > 80:
                            text = text[:77] + "..."

                        print(f"{Colors.CYAN}[{date_str}] {sender_name}: {text}{Colors.RESET}")

                    input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

                elif choice == "4":
                    try:
                        full_chat = await self.manager.client.get_entity(entity)

                        info_data = {
                            "ID": getattr(full_chat, "id", "Unknown"),
                            "Тип": "Группа" if hasattr(full_chat, "title") else "Личный чат",
                            "Username": getattr(full_chat, "username", "Не установлен"),
                            "Участников": getattr(full_chat, "participants_count", "Unknown"),
                            "Описание": getattr(full_chat, "about", "Нет описания")[:50]
                        }

                        info_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                ℹ️ ИНФОРМАЦИЯ О ЧАТЕ                                        
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫"""

                        for key, value in info_data.items():
                            info_box += f"\n  {key}:{' ' * (15 - len(key))}{value}{'':<65}  "

                        info_box += f"""
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                        """
                        print(info_box)

                    except Exception as e:
                        print(f"{Colors.RED}❌ Ошибка получения информации: {e}{Colors.RESET}")

                    input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

                elif choice == "0":
                    break

        except Exception as e:
            error_box = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                 ❌ Ошибка открытия чата                                    
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  {str(e)[:90]:<90}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(error_box)
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def groups_menu(self):
        while True:
            clear_screen()

            groups_header = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                            👥 УПРАВЛЕНИЕ ГРУППАМИ И КАНАЛАМИ                               
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(groups_header)

            groups_menu_items = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 📋 Список всех групп и каналов{'':<48}  
  2. ➕ Создать группу{'':<63}  
  3. 📢 Создать канал{'':<63}  
  4. 👥 Управление участниками{'':<57}  
  5. ⚙️  Настройки группы/канала{'':<55}  
  6. 📊 Статистика группы{'':<61}  
  7. 🚪 Покинуть группу/канал{'':<56}  
  8. 🔍 Поиск групп/каналов{'':<58}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(groups_menu_items)

            choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

            if choice == "1":
                await self.list_groups_and_channels()
            elif choice == "2":
                await self.create_group()
            elif choice == "3":
                await self.create_channel()
            elif choice == "4":
                await self.manage_participants()
            elif choice == "5":
                await self.group_settings()
            elif choice == "6":
                await self.group_statistics()
            elif choice == "7":
                await self.leave_group()
            elif choice == "8":
                await self.search_groups()
            elif choice == "0":
                break

    async def list_groups_and_channels(self):
        clear_screen()

        try:
            dialogs = await self.manager.client.get_dialogs()
            groups = []
            channels = []

            for dialog in dialogs:
                if hasattr(dialog.entity, 'megagroup') and dialog.entity.megagroup:
                    groups.append(dialog.entity)
                elif hasattr(dialog.entity, 'broadcast') and dialog.entity.broadcast:
                    channels.append(dialog.entity)
                elif hasattr(dialog.entity, 'title'):
                    groups.append(dialog.entity)

            list_header = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                        📋 ГРУППЫ ({len(groups)}) И КАНАЛЫ ({len(channels)})                  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(list_header)

            print(f"\n{Colors.BLUE}👥 ГРУППЫ:{Colors.RESET}")
            for i, group in enumerate(groups, 1):
                title = group.title[:50] if group.title else "Без названия"
                username = f"@{group.username}" if group.username else "Нет username"
                participants = getattr(group, 'participants_count', 'Unknown')

                group_box = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  {i:2d}. 👥 {title:<50} | ID: {group.id}
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
      💬 {username:<30} | 👤 Участников: {participants}
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(group_box)

            print(f"\n{Colors.BLUE}📢 КАНАЛЫ:{Colors.RESET}")
            for i, channel in enumerate(channels, 1):
                title = channel.title[:50] if channel.title else "Без названия"
                username = f"@{channel.username}" if channel.username else "Нет username"
                participants = getattr(channel, 'participants_count', 'Unknown')

                channel_box = f"""
{Colors.MAGENTA}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  {i:2d}. 📢 {title:<50} | ID: {channel.id}
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
      💬 {username:<30} | 👤 Подписчиков: {participants}
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(channel_box)

        except Exception as e:
            error_box = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               ❌ Ошибка получения списка                                   
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  {str(e)[:90]:<90}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(error_box)

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def create_group(self):
        clear_screen()

        title = input(f"{Colors.CYAN}👥 Название группы: {Colors.RESET}").strip()
        if not title:
            return

        print(
            f"{Colors.YELLOW}👤 Добавьте участников (username/ID, по одному, пустая строка для завершения):{Colors.RESET}")

        users = []
        while True:
            user_input = input(f"{Colors.CYAN}👤 Участник: {Colors.RESET}").strip()
            if not user_input:
                break
            try:
                user = await self.manager.client.get_entity(user_input)
                users.append(user)
                print(f"{Colors.GREEN}✅ Добавлен: {getattr(user, 'first_name', user_input)}{Colors.RESET}")
            except Exception as e:
                print(f"{Colors.RED}❌ Не найден: {user_input}{Colors.RESET}")

        if not users:
            print(f"{Colors.RED}❌ Нужен хотя бы один участник{Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
            return

        try:
            result = await self.manager.client(functions.messages.CreateChatRequest(
                users=users,
                title=title
            ))

            success_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                 ✅ ГРУППА СОЗДАНА                                          
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Название:   {title:<75}  
  Участников: {len(users):<75}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(success_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка создания группы: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def create_channel(self):
        clear_screen()

        title = input(f"{Colors.CYAN}📢 Название канала: {Colors.RESET}").strip()
        if not title:
            return

        about = input(f"{Colors.CYAN}📝 Описание канала: {Colors.RESET}").strip()
        megagroup = input(f"{Colors.CYAN}👥 Создать как супергруппу? (y/N): {Colors.RESET}").lower() in ['y', 'yes']

        try:
            result = await self.manager.client(functions.channels.CreateChannelRequest(
                title=title,
                about=about or "",
                megagroup=megagroup
            ))

            success_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                 ✅ КАНАЛ СОЗДАН                                            
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Название:    {title:<74}  
  Тип:         {'Супергруппа' if megagroup else 'Канал':<74}  
  Описание:    {(about[:70] + '...' if len(about) > 70 else about):<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(success_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка создания канала: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def manage_participants(self):
        chat_input = input(f"{Colors.CYAN}👥 ID/username группы: {Colors.RESET}").strip()
        if not chat_input:
            return

        try:
            entity = await self.manager.client.get_entity(chat_input)

            while True:
                clear_screen()

                participants_header = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                        👥 УПРАВЛЕНИЕ УЧАСТНИКАМИ: {entity.title[:40]:<40}    
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(participants_header)

                participants_menu = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 👥 Показать участников{'':<58}  
  2. ➕ Добавить участника{'':<60}  
  3. ❌ Удалить участника{'':<60}  
  4. 👑 Назначить администратора{'':<52}  
  5. 📵 Забанить пользователя{'':<57}  
  6. 🔄 Разбанить пользователя{'':<55}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(participants_menu)

                choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

                if choice == "1":
                    await self.show_participants(entity)
                elif choice == "2":
                    await self.add_participant(entity)
                elif choice == "3":
                    await self.remove_participant(entity)
                elif choice == "4":
                    await self.promote_admin(entity)
                elif choice == "5":
                    await self.ban_user(entity)
                elif choice == "6":
                    await self.unban_user(entity)
                elif choice == "0":
                    break

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка: {e}{Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def show_participants(self, entity):
        try:
            participants = await self.manager.client.get_participants(entity, limit=100)

            print(f"\n{Colors.GREEN}👥 Участники ({len(participants)}):{Colors.RESET}")

            for i, participant in enumerate(participants, 1):
                name = f"{participant.first_name or ''} {participant.last_name or ''}".strip()
                username = f"@{participant.username}" if participant.username else "нет"

                status = "👤"
                if participant.bot:
                    status = "🤖"
                elif hasattr(participant, 'admin_rights') and participant.admin_rights:
                    status = "👑"

                print(
                    f"{Colors.CYAN}{status} {i:3d}. {name[:30]:<30} | {username:<20} | ID: {participant.id}{Colors.RESET}")

                if i % 20 == 0:
                    more = input(f"{Colors.YELLOW}Показать еще? (Enter/n): {Colors.RESET}")
                    if more.lower() == 'n':
                        break

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка получения участников: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def add_participant(self, entity):
        user_input = input(f"{Colors.CYAN}➕ Username/ID для добавления: {Colors.RESET}").strip()
        if not user_input:
            return

        try:
            user = await self.manager.client.get_entity(user_input)
            await self.manager.client(functions.channels.InviteToChannelRequest(
                channel=entity,
                users=[user]
            ))
            print(f"{Colors.GREEN}✅ Пользователь добавлен{Colors.RESET}")
        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка добавления: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def remove_participant(self, entity):
        user_input = input(f"{Colors.CYAN}❌ Username/ID для удаления: {Colors.RESET}").strip()
        if not user_input:
            return

        try:
            user = await self.manager.client.get_entity(user_input)
            await self.manager.client.kick_participant(entity, user)
            print(f"{Colors.GREEN}✅ Пользователь удален{Colors.RESET}")
        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка удаления: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def promote_admin(self, entity):
        user_input = input(f"{Colors.CYAN}👑 Username/ID для назначения админом: {Colors.RESET}").strip()
        if not user_input:
            return

        try:
            user = await self.manager.client.get_entity(user_input)

            rights = functions.types.ChatAdminRights(
                change_info=True,
                post_messages=True,
                edit_messages=True,
                delete_messages=True,
                ban_users=True,
                invite_users=True,
                pin_messages=True,
                add_admins=False
            )

            await self.manager.client(functions.channels.EditAdminRequest(
                channel=entity,
                user_id=user,
                admin_rights=rights,
                rank="Администратор"
            ))

            print(f"{Colors.GREEN}✅ Пользователь назначен администратором{Colors.RESET}")
        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка назначения: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def ban_user(self, entity):
        user_input = input(f"{Colors.CYAN}📵 Username/ID для бана: {Colors.RESET}").strip()
        if not user_input:
            return

        try:
            user = await self.manager.client.get_entity(user_input)
            await self.manager.client(functions.channels.EditBannedRequest(
                channel=entity,
                participant=user,
                banned_rights=functions.types.ChatBannedRights(
                    until_date=None,
                    view_messages=True,
                    send_messages=True,
                    send_media=True,
                    send_stickers=True,
                    send_gifs=True,
                    send_games=True,
                    send_inline=True,
                    embed_links=True
                )
            ))
            print(f"{Colors.GREEN}✅ Пользователь забанен{Colors.RESET}")
        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка бана: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def unban_user(self, entity):
        user_input = input(f"{Colors.CYAN}🔄 Username/ID для разбана: {Colors.RESET}").strip()
        if not user_input:
            return

        try:
            user = await self.manager.client.get_entity(user_input)
            await self.manager.client(functions.channels.EditBannedRequest(
                channel=entity,
                participant=user,
                banned_rights=functions.types.ChatBannedRights(
                    until_date=None,
                    view_messages=False,
                    send_messages=False,
                    send_media=False,
                    send_stickers=False,
                    send_gifs=False,
                    send_games=False,
                    send_inline=False,
                    embed_links=False
                )
            ))
            print(f"{Colors.GREEN}✅ Пользователь разбанен{Colors.RESET}")
        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка разбана: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def group_settings(self):
        print(f"{Colors.BLUE}🔧 Настройки групп - базовая реализация{Colors.RESET}")
        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def group_statistics(self):
        chat_input = input(f"{Colors.CYAN}📊 ID/username группы для статистики: {Colors.RESET}").strip()
        if not chat_input:
            return

        try:
            entity = await self.manager.client.get_entity(chat_input)

            messages_today = 0
            messages_week = 0

            from datetime import datetime, timedelta
            today = datetime.now()
            week_ago = today - timedelta(days=7)

            async for message in self.manager.client.iter_messages(entity, limit=1000):
                if message.date.date() == today.date():
                    messages_today += 1
                if message.date >= week_ago:
                    messages_week += 1

            participants_count = 0
            try:
                participants = await self.manager.client.get_participants(entity, limit=0)
                participants_count = len(participants)
            except:
                participants_count = getattr(entity, 'participants_count', 'Unknown')

            stats_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              📊 СТАТИСТИКА: {entity.title[:40]:<40}       
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Участников:          {participants_count:<65}  
  Сообщений сегодня:   {messages_today:<65}  
  Сообщений за неделю: {messages_week:<65}  
  Тип:                 {'Канал' if getattr(entity, 'broadcast', False) else 'Группа':<65}  
  ID:                  {entity.id:<65}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(stats_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка получения статистики: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def leave_group(self):
        chat_input = input(f"{Colors.CYAN}🚪 ID/username группы для выхода: {Colors.RESET}").strip()
        if not chat_input:
            return

        confirm = input(f"{Colors.RED}⚠️ Подтвердите выход из группы (y/N): {Colors.RESET}").lower()
        if confirm not in ['y', 'yes']:
            return

        try:
            entity = await self.manager.client.get_entity(chat_input)
            await self.manager.client(functions.channels.LeaveChannelRequest(entity))
            print(f"{Colors.GREEN}✅ Вы покинули группу/канал{Colors.RESET}")
        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка выхода: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def search_groups(self):
        search_query = input(f"{Colors.CYAN}🔍 Поиск групп/каналов: {Colors.RESET}").strip()
        if not search_query:
            return

        try:
            result = await self.manager.client(functions.contacts.SearchRequest(
                q=search_query,
                limit=50
            ))

            if not result.chats:
                print(f"{Colors.YELLOW}❌ Группы/каналы не найдены{Colors.RESET}")
            else:
                print(f"{Colors.GREEN}✅ Найдено {len(result.chats)} результатов:{Colors.RESET}")

                for i, chat in enumerate(result.chats, 1):
                    title = chat.title[:40] if chat.title else "Без названия"
                    username = f"@{chat.username}" if chat.username else "Нет username"
                    chat_type = "📢 Канал" if getattr(chat, 'broadcast', False) else "👥 Группа"

                    search_result_box = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  {i:2d}. {chat_type} {title:<40} | ID: {chat.id}
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
      💬 {username:<40} | 👤 {getattr(chat, 'participants_count', 'Unknown')}
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                    """
                    print(search_result_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка поиска: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def contacts_menu(self):
        while True:
            clear_screen()

            contacts_header = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                      📞 УПРАВЛЕНИЕ КОНТАКТАМИ       |  Не работает, в новых версиях починю                     
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(contacts_header)

            contacts_menu_items = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 📋 Показать все контакты{'':<57}  
  2. 🔍 Найти контакт{'':<65}  
  3. ➕ Добавить контакт{'':<63}  
  4. ❌ Удалить контакт{'':<63}  
  5. 📊 Статистика контактов{'':<58}  
  6. 📤 Экспорт контактов{'':<61}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(contacts_menu_items)

            choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

            if choice == "1":
                await self.show_all_contacts()
            elif choice == "2":
                await self.find_contact()
            elif choice == "3":
                await self.add_contact()
            elif choice == "4":
                await self.delete_contact()
            elif choice == "5":
                await self.contacts_stats()
            elif choice == "6":
                await self.export_contacts()
            elif choice == "0":
                break

    async def show_all_contacts(self):
        clear_screen()

        try:
            contacts = await self.manager.client.get_contacts()

            if not contacts:
                no_contacts_box = f"""
{Colors.YELLOW}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  📭 Контакты не найдены                                    
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(no_contacts_box)
            else:
                contacts_header = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              📋 ВСЕ КОНТАКТЫ ({len(contacts)})                              
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(contacts_header)

                for i, contact in enumerate(contacts, 1):
                    name = f"{contact.first_name or ''} {contact.last_name or ''}".strip()
                    username = f"@{contact.username}" if contact.username else "нет username"
                    phone = contact.phone or "нет телефона"

                    contact_box = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  {i:3d}. 👤 {name[:40]:<40} | 🆔 {contact.id}
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
       📞 {phone:<30} | 💬 {username:<30}
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                    """
                    print(contact_box)

                    if i % 10 == 0:
                        more = input(f"{Colors.YELLOW}Показать еще? (Enter/n): {Colors.RESET}")
                        if more.lower() == 'n':
                            break

        except Exception as e:
            error_box = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                ❌ Ошибка получения контактов                               
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  {str(e)[:90]:<90}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(error_box)

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def find_contact(self):
        search_query = input(f"{Colors.CYAN}🔍 Поиск по имени/username: {Colors.RESET}").strip()
        if not search_query:
            return

        try:
            contacts = await self.manager.client.get_contacts()
            found_contacts = []

            for contact in contacts:
                name = f"{contact.first_name or ''} {contact.last_name or ''}".strip()
                username = contact.username or ""

                if (search_query.lower() in name.lower() or
                        search_query.lower() in username.lower()):
                    found_contacts.append(contact)

            if not found_contacts:
                print(f"{Colors.YELLOW}❌ Контакты не найдены{Colors.RESET}")
            else:
                print(f"{Colors.GREEN}✅ Найдено {len(found_contacts)} контактов:{Colors.RESET}")
                for contact in found_contacts:
                    name = f"{contact.first_name or ''} {contact.last_name or ''}".strip()
                    username = f"@{contact.username}" if contact.username else "нет"
                    print(f"{Colors.CYAN}👤 {name} | {username} | ID: {contact.id}{Colors.RESET}")

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка поиска: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def add_contact(self):
        phone = input(f"{Colors.CYAN}📞 Номер телефона (+7...): {Colors.RESET}").strip()
        if not phone:
            return

        try:
            contact = await self.manager.client(functions.contacts.ImportContactsRequest(
                contacts=[functions.types.InputPhoneContact(
                    client_id=0,
                    phone=phone,
                    first_name="Новый контакт",
                    last_name=""
                )]
            ))
            print(f"{Colors.GREEN}✅ Контакт добавлен{Colors.RESET}")
        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка добавления: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def delete_contact(self):
        contact_input = input(f"{Colors.CYAN}🗑️ Username/ID для удаления: {Colors.RESET}").strip()
        if not contact_input:
            return

        confirm = input(f"{Colors.RED}⚠️ Подтвердите удаление (y/N): {Colors.RESET}").lower()
        if confirm not in ['y', 'yes']:
            return

        try:
            entity = await self.manager.client.get_entity(contact_input)
            await self.manager.client(functions.contacts.DeleteContactsRequest(
                id=[entity]
            ))
            print(f"{Colors.GREEN}✅ Контакт удален{Colors.RESET}")
        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка удаления: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def contacts_stats(self):
        try:
            contacts = await self.manager.client.get_contacts()

            with_username = sum(1 for c in contacts if c.username)
            with_phone = sum(1 for c in contacts if c.phone)
            bots = sum(1 for c in contacts if c.bot)

            stats_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                📊 СТАТИСТИКА КОНТАКТОВ                                     
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Всего контактов:    {len(contacts):<66}  
  С username:         {with_username:<66}  
  С телефоном:        {with_phone:<66}  
  Ботов:              {bots:<66}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(stats_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка получения статистики: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def export_contacts(self):
        try:
            contacts = await self.manager.client.get_contacts()

            if not contacts:
                print(f"{Colors.YELLOW}❌ Нет контактов для экспорта{Colors.RESET}")
                input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
                return

            from datetime import datetime
            import json

            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            filename = f"contacts_export_{timestamp}.json"

            contacts_data = []
            for contact in contacts:
                contacts_data.append({
                    "id": contact.id,
                    "first_name": contact.first_name,
                    "last_name": contact.last_name,
                    "username": contact.username,
                    "phone": contact.phone,
                    "is_bot": contact.bot,
                    "is_contact": contact.contact
                })

            with open(filename, 'w', encoding='utf-8') as f:
                json.dump({
                    "export_date": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
                    "total_contacts": len(contacts_data),
                    "contacts": contacts_data
                }, f, ensure_ascii=False, indent=2)

            print(f"{Colors.GREEN}✅ Контакты экспортированы в {filename}{Colors.RESET}")

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка экспорта: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def media_menu(self):
        while True:
            clear_screen()

            media_header = f"""
{Colors.MAGENTA}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                   🎬 МЕДИА И ФАЙЛЫ                                        
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(media_header)

            media_menu_items = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 📤 Отправить файл{'':<64}  
  2. 🖼️  Отправить изображение{'':<58}  
  3. 📥 Скачать медиа из чата{'':<56}  
  4. 🎵 Отправить аудио{'':<63}  
  5. 🎥 Отправить видео{'':<63}  
  6. 📋 Анализ медиа в чате{'':<58}  
  7. 🗂️  Массовая загрузка файлов{'':<53}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(media_menu_items)

            choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

            if choice == "1":
                await self.send_file()
            elif choice == "2":
                await self.send_image()
            elif choice == "3":
                await self.download_media()
            elif choice == "4":
                await self.send_audio()
            elif choice == "5":
                await self.send_video()
            elif choice == "6":
                await self.analyze_media()
            elif choice == "7":
                await self.bulk_upload()
            elif choice == "0":
                break

    async def send_file(self):
        clear_screen()

        file_path = input(f"{Colors.CYAN}📁 Путь к файлу: {Colors.RESET}").strip()
        if not file_path or not os.path.exists(file_path):
            print(f"{Colors.RED}❌ Файл не найден{Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
            return

        chat_input = input(f"{Colors.CYAN}💬 Чат для отправки: {Colors.RESET}").strip()
        if not chat_input:
            return

        caption = input(f"{Colors.CYAN}📝 Подпись (опционально): {Colors.RESET}")

        try:
            entity = await self.manager.client.get_entity(chat_input)

            file_size = os.path.getsize(file_path) / 1024 / 1024

            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                          📤 Отправляется файл ({file_size:.1f} MB)...              
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)

            await self.manager.client.send_file(
                entity,
                file_path,
                caption=caption if caption else None
            )

            success_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ✅ ФАЙЛ ОТПРАВЛЕН                                         
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Файл:    {os.path.basename(file_path)[:70]:<76}  
  Размер:  {file_size:.1f} MB{'':<78}  
  Чат:     {getattr(entity, 'title', getattr(entity, 'first_name', 'Unknown'))[:70]:<76}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(success_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка отправки файла: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def send_image(self):
        await self.send_file()

    async def send_audio(self):
        await self.send_file()

    async def send_video(self):
        await self.send_file()

    async def download_media(self):
        clear_screen()

        chat_input = input(f"{Colors.CYAN}💬 Чат для скачивания медиа: {Colors.RESET}").strip()
        if not chat_input:
            return

        limit = int(
            input(f"{Colors.CYAN}📊 Количество сообщений для проверки (по умолчанию 50): {Colors.RESET}") or "50")

        try:
            entity = await self.manager.client.get_entity(chat_input)

            from datetime import datetime
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            download_dir = f"downloads_{timestamp}"
            os.makedirs(download_dir, exist_ok=True)

            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               📥 Скачивание медиа файлов...                                
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)

            downloaded_count = 0
            async for message in self.manager.client.iter_messages(entity, limit=limit):
                if message.media:
                    try:
                        media_type = "file"
                        if hasattr(message.media, 'photo'):
                            media_type = "photo"
                        elif hasattr(message.media, 'document'):
                            if message.media.document.mime_type.startswith('video/'):
                                media_type = "video"
                            elif message.media.document.mime_type.startswith('audio/'):
                                media_type = "audio"

                        file_path = await self.manager.client.download_media(
                            message.media,
                            file=os.path.join(download_dir, f"{media_type}_{message.id}")
                        )

                        if file_path:
                            downloaded_count += 1
                            print(f"{Colors.GREEN}✅ Скачано: {os.path.basename(file_path)}{Colors.RESET}")

                    except Exception as e:
                        print(f"{Colors.RED}❌ Ошибка скачивания: {str(e)[:50]}{Colors.RESET}")

            final_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               ✅ СКАЧИВАНИЕ ЗАВЕРШЕНО                                      
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Скачано файлов: {downloaded_count:<66}  
  Папка:          {download_dir:<66}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(final_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка скачивания медиа: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def analyze_media(self):
        chat_input = input(f"{Colors.CYAN}💬 Чат для анализа медиа: {Colors.RESET}").strip()
        if not chat_input:
            return

        limit = int(
            input(f"{Colors.CYAN}📊 Количество сообщений для анализа (по умолчанию 200): {Colors.RESET}") or "200")

        try:
            entity = await self.manager.client.get_entity(chat_input)

            media_stats = {
                'photos': 0,
                'videos': 0,
                'audio': 0,
                'documents': 0,
                'stickers': 0,
                'gifs': 0,
                'total_size': 0
            }

            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               📊 Анализ медиа файлов...                                    
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)

            async for message in self.manager.client.iter_messages(entity, limit=limit):
                if message.media:
                    if hasattr(message.media, 'photo'):
                        media_stats['photos'] += 1
                    elif hasattr(message.media, 'document'):
                        doc = message.media.document
                        if doc.mime_type:
                            if 'video' in doc.mime_type:
                                media_stats['videos'] += 1
                            elif 'audio' in doc.mime_type:
                                media_stats['audio'] += 1
                            elif 'gif' in doc.mime_type:
                                media_stats['gifs'] += 1
                            else:
                                media_stats['documents'] += 1

                        if hasattr(doc, 'size'):
                            media_stats['total_size'] += doc.size

                    elif hasattr(message.media, 'sticker'):
                        media_stats['stickers'] += 1

            total_size_mb = media_stats['total_size'] / 1024 / 1024

            analysis_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              📊 АНАЛИЗ МЕДИА: {entity.title[:30] if hasattr(entity, 'title') else 'Чат':<30}     
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  🖼️  Фотографии:    {media_stats['photos']:<67}  
  🎥 Видео:          {media_stats['videos']:<67}  
  🎵 Аудио:          {media_stats['audio']:<67}  
  📄 Документы:      {media_stats['documents']:<67}  
  😊 Стикеры:        {media_stats['stickers']:<67}  
  🎬 GIF:            {media_stats['gifs']:<67}  
  📊 Общий размер:   {total_size_mb:.1f} MB{'':<59}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(analysis_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка анализа медиа: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def bulk_upload(self):
        folder_path = input(f"{Colors.CYAN}📁 Путь к папке с файлами: {Colors.RESET}").strip()
        if not folder_path or not os.path.exists(folder_path):
            print(f"{Colors.RED}❌ Папка не найдена{Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
            return

        chat_input = input(f"{Colors.CYAN}💬 Чат для отправки: {Colors.RESET}").strip()
        if not chat_input:
            return

        try:
            entity = await self.manager.client.get_entity(chat_input)

            files = []
            for root, dirs, filenames in os.walk(folder_path):
                for filename in filenames:
                    file_path = os.path.join(root, filename)
                    files.append(file_path)

            if not files:
                print(f"{Colors.YELLOW}❌ Файлы не найдены в папке{Colors.RESET}")
                input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
                return

            delay = float(input(f"{Colors.CYAN}⏰ Задержка между отправками (сек): {Colors.RESET}") or "2")

            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                            🗂️ Загружается {len(files)} файлов...                          
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)

            success_count = 0
            for i, file_path in enumerate(files, 1):
                try:
                    await self.manager.client.send_file(entity, file_path)
                    filename = os.path.basename(file_path)
                    print(f"{Colors.GREEN}✅ {i}/{len(files)} Отправлен: {filename[:40]}{Colors.RESET}")
                    success_count += 1

                    if i < len(files):
                        await asyncio.sleep(delay)

                except Exception as e:
                    filename = os.path.basename(file_path)
                    print(f"{Colors.RED}❌ {i}/{len(files)} Ошибка {filename}: {str(e)[:30]}{Colors.RESET}")

            final_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              ✅ МАССОВАЯ ЗАГРУЗКА ЗАВЕРШЕНА                                
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Успешно отправлено: {success_count}/{len(files):<60}  
  Неудачно:           {len(files) - success_count}/{len(files):<60}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(final_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка массовой загрузки: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def automation_menu(self):
        while True:
            clear_screen()

            automation_header = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                    🤖 АВТОМАТИЗАЦИЯ                                        
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(automation_header)

            automation_menu_items = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 🔄 Автоответчик{'':<67}  
  2. ⏰ Отложенные сообщения{'':<57}  
  3. 📱 Автоприглашение в группы{'':<52}  
  4. 🔁 Автопересылка сообщений{'':<54}  
  5. ✅ Автоподтверждение заявок{'':<53}  
  6. 🎯 Фильтры сообщений{'':<60}  
  7. 📊 Статистика автоматизации{'':<52}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(automation_menu_items)

            choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

            if choice == "1":
                await self.auto_responder()
            elif choice == "2":
                await self.scheduled_messages()
            elif choice == "3":
                await self.auto_invite()
            elif choice == "4":
                await self.auto_forward()
            elif choice == "5":
                await self.auto_approve()
            elif choice == "6":
                await self.message_filters()
            elif choice == "7":
                await self.automation_stats()
            elif choice == "0":
                break

    async def auto_responder(self):
        clear_screen()

        responder_header = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                   🔄 АВТООТВЕТЧИК                                          
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(responder_header)

        print(f"{Colors.YELLOW}⚙️ Настройка автоответчика:{Colors.RESET}")

        trigger = input(f"{Colors.CYAN}🔍 Ключевое слово для срабатывания: {Colors.RESET}").strip()
        if not trigger:
            return

        response = input(f"{Colors.CYAN}💬 Ответное сообщение: {Colors.RESET}").strip()
        if not response:
            return

        delay = int(input(f"{Colors.CYAN}⏰ Задержка перед ответом (сек, по умолчанию 2): {Colors.RESET}") or "2")

        autoresponder_data = {
            "trigger": trigger.lower(),
            "response": response,
            "delay": delay,
            "enabled": True,
            "created": datetime.now().isoformat()
        }

        config_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                ✅ АВТООТВЕТЧИК НАСТРОЕН                                     
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Триггер:   {trigger:<76}  
  Ответ:     {response[:70]:<76}  
  Задержка:  {delay} сек{'':<76}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(config_box)

        print(f"{Colors.YELLOW}💡 Автоответчик будет работать пока программа запущена{Colors.RESET}")
        print(f"{Colors.YELLOW}💡 Для полноценной работы требуется постоянный мониторинг{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def scheduled_messages(self):
        clear_screen()

        schedule_header = f"""
{Colors.MAGENTA}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                 ⏰ ОТЛОЖЕННЫЕ СООБЩЕНИЯ                                     
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(schedule_header)

        chat_input = input(f"{Colors.CYAN}💬 Чат для отправки: {Colors.RESET}").strip()
        if not chat_input:
            return

        message = input(f"{Colors.CYAN}📝 Текст сообщения: {Colors.RESET}").strip()
        if not message:
            return

        print(f"{Colors.YELLOW}⏰ Время отправки (формат: ДД.ММ.ГГГГ ЧЧ:ММ):{Colors.RESET}")
        time_input = input(f"{Colors.CYAN}📅 Введите время: {Colors.RESET}").strip()

        try:
            send_time = datetime.strptime(time_input, "%d.%m.%Y %H:%M")
            now = datetime.now()

            if send_time <= now:
                print(f"{Colors.RED}❌ Время должно быть в будущем{Colors.RESET}")
                input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
                return

            delay_seconds = (send_time - now).total_seconds()

            schedule_info = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              ⏰ СООБЩЕНИЕ ЗАПЛАНИРОВАНО                                     
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Чат:     {chat_input:<76}  
  Время:   {send_time.strftime('%d.%m.%Y %H:%M'):<76}  
  Через:   {int(delay_seconds / 60)} минут{'':<72}  
  Текст:   {message[:70]:<76}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(schedule_info)

            async def send_delayed():
                await asyncio.sleep(delay_seconds)
                try:
                    entity = await self.manager.client.get_entity(chat_input)
                    await self.manager.client.send_message(entity, message)
                    print(f"{Colors.GREEN}✅ Отложенное сообщение отправлено!{Colors.RESET}")
                except Exception as e:
                    print(f"{Colors.RED}❌ Ошибка отправки отложенного сообщения: {e}{Colors.RESET}")

            asyncio.create_task(send_delayed())

        except ValueError:
            print(f"{Colors.RED}❌ Неверный формат времени{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def auto_invite(self):
        print(f"{Colors.BLUE}🔧 Автоприглашение - базовая реализация{Colors.RESET}")

        group_input = input(f"{Colors.CYAN}👥 ID/username группы: {Colors.RESET}").strip()
        if not group_input:
            return

        print(f"{Colors.YELLOW}👤 Добавьте пользователей для автоприглашения:{Colors.RESET}")
        users_to_invite = []

        while True:
            user_input = input(f"{Colors.CYAN}👤 Username/ID (пусто для завершения): {Colors.RESET}").strip()
            if not user_input:
                break
            users_to_invite.append(user_input)

        if not users_to_invite:
            return

        try:
            entity = await self.manager.client.get_entity(group_input)

            success_count = 0
            for user in users_to_invite:
                try:
                    user_entity = await self.manager.client.get_entity(user)
                    await self.manager.client(functions.channels.InviteToChannelRequest(
                        channel=entity,
                        users=[user_entity]
                    ))
                    print(f"{Colors.GREEN}✅ Приглашен: {user}{Colors.RESET}")
                    success_count += 1
                    await asyncio.sleep(2)
                except Exception as e:
                    print(f"{Colors.RED}❌ Ошибка приглашения {user}: {str(e)[:40]}{Colors.RESET}")

            print(f"{Colors.GREEN}✅ Успешно приглашено: {success_count}/{len(users_to_invite)}{Colors.RESET}")

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка автоприглашения: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def auto_forward(self):
        print(f"{Colors.BLUE}🔧 Автопересылка - базовая настройка{Colors.RESET}")

        source_chat = input(f"{Colors.CYAN}📥 Чат-источник: {Colors.RESET}").strip()
        target_chat = input(f"{Colors.CYAN}📤 Чат-назначение: {Colors.RESET}").strip()

        if not source_chat or not target_chat:
            return

        forward_config = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              🔁 АВТОПЕРЕСЫЛКА НАСТРОЕНА                                    
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Источник:    {source_chat:<70}  
  Назначение:  {target_chat:<70}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(forward_config)

        print(f"{Colors.YELLOW}💡 Для работы автопересылки требуется постоянный мониторинг{Colors.RESET}")
        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def auto_approve(self):
        print(f"{Colors.BLUE}🔧 Автоподтверждение заявок - базовая реализация{Colors.RESET}")

        group_input = input(f"{Colors.CYAN}👥 ID/username группы: {Colors.RESET}").strip()
        if not group_input:
            return

        approve_config = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                            ✅ АВТОПОДТВЕРЖДЕНИЕ НАСТРОЕНО                                   
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Группа: {group_input:<77}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(approve_config)

        print(f"{Colors.YELLOW}💡 Будут автоматически одобряться все заявки на вступление{Colors.RESET}")
        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def message_filters(self):
        print(f"{Colors.BLUE}🔧 Фильтры сообщений - базовая настройка{Colors.RESET}")

        filter_word = input(f"{Colors.CYAN}🔍 Слово для фильтрации: {Colors.RESET}").strip()
        action = input(f"{Colors.CYAN}⚡ Действие (delete/ignore/forward): {Colors.RESET}").strip()

        if filter_word and action:
            filter_config = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                🎯 ФИЛЬТР НАСТРОЕН                                          
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Фильтр:   {filter_word:<75}  
  Действие: {action:<75}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(filter_config)

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def automation_stats(self):
        stats_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              📊 СТАТИСТИКА АВТОМАТИЗАЦИИ                                   
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  🔄 Автоответчик:        Настроен{'':<62}  
  ⏰ Отложенных сообщений: 0{'':<69}  
  🔁 Автопересылка:       Неактивна{'':<60}  
  ✅ Автоподтверждение:   Неактивно{'':<60}  
  🎯 Активных фильтров:   0{'':<69}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(stats_box)
        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def analytics_menu(self):
        while True:
            clear_screen()

            analytics_header = f"""
{Colors.YELLOW}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               📊 СТАТИСТИКА И АНАЛИТИКА                                    
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(analytics_header)

            analytics_menu_items = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 📈 Статистика сообщений{'':<58}  
  2. 👥 Анализ активности чатов{'':<54}  
  3. ⏰ Анализ времени активности{'':<51}  
  4. 🏆 Топ самых активных чатов{'':<52}  
  5. 📊 Общая статистика аккаунта{'':<51}  
  6. 💬 Анализ типов сообщений{'':<55}  
  7. 📄 Экспорт отчета{'':<65}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(analytics_menu_items)

            choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

            if choice == "1":
                await self.message_statistics()
            elif choice == "2":
                await self.chat_activity_analysis()
            elif choice == "3":
                await self.time_activity_analysis()
            elif choice == "4":
                await self.top_active_chats()
            elif choice == "5":
                await self.account_statistics()
            elif choice == "6":
                await self.message_types_analysis()
            elif choice == "7":
                await self.export_analytics_report()
            elif choice == "0":
                break

    async def message_statistics(self):
        clear_screen()

        try:
            dialogs = await self.manager.client.get_dialogs(limit=100)

            total_messages = 0
            sent_messages = 0
            received_messages = 0

            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               📊 Анализ статистики сообщений...                            
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)

            me = await self.manager.client.get_me()

            for dialog in dialogs[:20]:
                async for message in self.manager.client.iter_messages(dialog.entity, limit=100):
                    total_messages += 1
                    if message.sender_id == me.id:
                        sent_messages += 1
                    else:
                        received_messages += 1

            stats_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                📈 СТАТИСТИКА СООБЩЕНИЙ                                     
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  📊 Всего сообщений:      {total_messages:<64}  
  📤 Отправлено:           {sent_messages:<64}  
  📥 Получено:             {received_messages:<64}  
  📈 Соотношение отп/пол:  {sent_messages / max(received_messages, 1):.2f}{'':<60}  
  📋 Проанализировано:     {len(dialogs[:20])} чатов{'':<56}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(stats_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка анализа статистики: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def chat_activity_analysis(self):
        clear_screen()

        try:
            dialogs = await self.manager.client.get_dialogs(limit=50)

            chat_activity = []

            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              👥 Анализ активности чатов...                                 
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)

            for dialog in dialogs[:15]:
                chat_name = getattr(dialog.entity, 'title', getattr(dialog.entity, 'first_name', 'Unknown'))

                message_count = 0
                recent_activity = 0

                week_ago = datetime.now() - timedelta(days=7)

                async for message in self.manager.client.iter_messages(dialog.entity, limit=200):
                    message_count += 1
                    if message.date >= week_ago:
                        recent_activity += 1

                chat_activity.append({
                    'name': chat_name[:30],
                    'total': message_count,
                    'recent': recent_activity,
                    'type': 'Группа' if hasattr(dialog.entity, 'title') else 'Личный'
                })

            chat_activity.sort(key=lambda x: x['recent'], reverse=True)

            activity_header = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              👥 АКТИВНОСТЬ ЧАТОВ (ТОП-10)                                 
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(activity_header)

            for i, chat in enumerate(chat_activity[:10], 1):
                activity_box = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  {i:2d}. {chat['name']:<30} | {chat['type']:<8} | За неделю: {chat['recent']:<5} | Всего: {chat['total']:<5}
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(activity_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка анализа активности: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def time_activity_analysis(self):
        clear_screen()

        try:
            hourly_activity = [0] * 24

            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                             ⏰ Анализ времени активности...                                 
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)

            me = await self.manager.client.get_me()
            dialogs = await self.manager.client.get_dialogs(limit=10)

            for dialog in dialogs:
                async for message in self.manager.client.iter_messages(dialog.entity, limit=100):
                    if message.sender_id == me.id:
                        hour = message.date.hour
                        hourly_activity[hour] += 1

            max_activity = max(hourly_activity)

            time_header = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              ⏰ АНАЛИЗ ВРЕМЕНИ АКТИВНОСТИ                                   
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(time_header)

            for hour in range(24):
                activity = hourly_activity[hour]
                bar_length = int((activity / max(max_activity, 1)) * 40)
                bar = "█" * bar_length + "░" * (40 - bar_length)

                time_bar = f"""
{Colors.CYAN}  {hour:2d}:00 │{bar}│ {activity:3d}{Colors.RESET}
                """
                print(time_bar)

            most_active_hour = hourly_activity.index(max_activity)
            total_messages = sum(hourly_activity)

            time_stats = f"""
{Colors.YELLOW}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  🏆 Самый активный час:    {most_active_hour:2d}:00 ({max_activity} сообщений){'':<38}  
  📊 Всего сообщений:      {total_messages:<64}  
  📈 Средняя активность:   {total_messages / 24:.1f} сообщений в час{'':<43}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(time_stats)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка анализа времени: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def top_active_chats(self):
        await self.chat_activity_analysis()

    async def account_statistics(self):
        clear_screen()

        try:
            me = await self.manager.client.get_me()
            dialogs = await self.manager.client.get_dialogs()
            contacts = await self.manager.client.get_contacts()

            groups_count = sum(1 for d in dialogs if hasattr(d.entity, 'title'))
            private_chats = len(dialogs) - groups_count

            account_stats = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              📊 ОБЩАЯ СТАТИСТИКА АККАУНТА                                  
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  👤 Имя:              {me.first_name} {me.last_name or ''}{'':<55}  
  🆔 ID:               {me.id:<71}  
  📞 Телефон:          {me.phone or 'Не указан':<71}  
  💬 Username:         @{me.username if me.username else 'Не установлен':<70}  
  📋 Всего чатов:      {len(dialogs):<71}  
  👥 Групп/каналов:    {groups_count:<71}  
  💭 Личных чатов:     {private_chats:<71}  
  📞 Контактов:        {len(contacts):<71}  
  🔐 2FA:              {'Включен' if me.has_password else 'Выключен':<71}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(account_stats)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка получения статистики аккаунта: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def message_types_analysis(self):
        clear_screen()

        try:
            dialogs = await self.manager.client.get_dialogs(limit=20)

            message_types = {
                'text': 0,
                'photos': 0,
                'videos': 0,
                'documents': 0,
                'audio': 0,
                'stickers': 0,
                'voice': 0,
                'other': 0
            }

            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              💬 Анализ типов сообщений...                                  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)

            for dialog in dialogs:
                async for message in self.manager.client.iter_messages(dialog.entity, limit=50):
                    if message.text:
                        message_types['text'] += 1
                    elif message.media:
                        if hasattr(message.media, 'photo'):
                            message_types['photos'] += 1
                        elif hasattr(message.media, 'document'):
                            doc = message.media.document
                            if doc.mime_type:
                                if 'video' in doc.mime_type:
                                    message_types['videos'] += 1
                                elif 'audio' in doc.mime_type:
                                    message_types['audio'] += 1
                                else:
                                    message_types['documents'] += 1
                        elif hasattr(message.media, 'sticker'):
                            message_types['stickers'] += 1
                        else:
                            message_types['other'] += 1

            total = sum(message_types.values())

            types_header = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              💬 АНАЛИЗ ТИПОВ СООБЩЕНИЙ                                     
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(types_header)

            for msg_type, count in message_types.items():
                percentage = (count / max(total, 1)) * 100

                type_icons = {
                    'text': '📝',
                    'photos': '🖼️',
                    'videos': '🎥',
                    'documents': '📄',
                    'audio': '🎵',
                    'stickers': '😊',
                    'voice': '🎤',
                    'other': '❓'
                }

                type_stats = f"""
{Colors.CYAN}  {type_icons[msg_type]} {msg_type.title():<12} │ {count:5d} │ {percentage:5.1f}%{Colors.RESET}
                """
                print(type_stats)

            total_stats = f"""
{Colors.YELLOW}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  📊 Всего проанализировано: {total} сообщений{'':<49}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(total_stats)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка анализа типов сообщений: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def export_analytics_report(self):
        clear_screen()

        try:
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            filename = f"analytics_report_{timestamp}.json"

            me = await self.manager.client.get_me()
            dialogs = await self.manager.client.get_dialogs()
            contacts = await self.manager.client.get_contacts()

            report_data = {
                "report_date": datetime.now().isoformat(),
                "account_info": {
                    "name": f"{me.first_name} {me.last_name or ''}".strip(),
                    "username": me.username,
                    "id": me.id,
                    "phone": me.phone,
                    "has_2fa": me.has_password
                },
                "statistics": {
                    "total_chats": len(dialogs),
                    "total_contacts": len(contacts),
                    "groups_count": sum(1 for d in dialogs if hasattr(d.entity, 'title')),
                    "private_chats": len(dialogs) - sum(1 for d in dialogs if hasattr(d.entity, 'title'))
                },
                "top_chats": []
            }

            for dialog in dialogs[:10]:
                chat_name = getattr(dialog.entity, 'title', getattr(dialog.entity, 'first_name', 'Unknown'))
                report_data["top_chats"].append({
                    "name": chat_name,
                    "id": dialog.entity.id,
                    "type": "group" if hasattr(dialog.entity, 'title') else "private"
                })

            with open(filename, 'w', encoding='utf-8') as f:
                json.dump(report_data, f, ensure_ascii=False, indent=2)

            export_success = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               ✅ ОТЧЕТ ЭКСПОРТИРОВАН                                       
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Файл:    {filename:<76}  
  Размер:  {os.path.getsize(filename) / 1024:.1f} KB{'':<70}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(export_success)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка экспорта отчета: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def backup_menu(self):
        while True:
            clear_screen()

            backup_header = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                   💾 РЕЗЕРВНЫЕ КОПИИ                                       
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(backup_header)

            backup_menu_items = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 💾 Создать полный бэкап{'':<58}  
  2. 📋 Бэкап контактов{'':<63}  
  3. 💬 Бэкап истории чатов{'':<58}  
  4. 🖼️  Бэкап медиа файлов{'':<59}  
  5. ⚙️  Бэкап настроек{'':<63}  
  6. 📂 Управление бэкапами{'':<59}  
  7. 🔄 Восстановление из бэкапа{'':<52}  
  8. ⏰ Автоматические бэкапы{'':<56}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(backup_menu_items)

            choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

            if choice == "1":
                await self.create_full_backup()
            elif choice == "2":
                await self.backup_contacts()
            elif choice == "3":
                await self.backup_chat_history()
            elif choice == "4":
                await self.backup_media()
            elif choice == "5":
                await self.backup_settings()
            elif choice == "6":
                await self.manage_backups()
            elif choice == "7":
                await self.restore_backup()
            elif choice == "8":
                await self.auto_backup_settings()
            elif choice == "0":
                break

    async def create_full_backup(self):
        clear_screen()

        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        backup_dir = f"full_backup_{timestamp}"

        try:
            os.makedirs(backup_dir, exist_ok=True)

            full_backup_header = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               💾 СОЗДАНИЕ ПОЛНОГО БЭКАПА                                   
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(full_backup_header)

            print(f"{Colors.YELLOW}📋 Сохранение информации об аккаунте...{Colors.RESET}")
            me = await self.manager.client.get_me()

            account_info = {
                "id": me.id,
                "first_name": me.first_name,
                "last_name": me.last_name,
                "username": me.username,
                "phone": me.phone,
                "backup_date": datetime.now().isoformat()
            }

            with open(os.path.join(backup_dir, "account_info.json"), 'w', encoding='utf-8') as f:
                json.dump(account_info, f, ensure_ascii=False, indent=2)

            print(f"{Colors.YELLOW}📞 Сохранение контактов...{Colors.RESET}")
            contacts = await self.manager.client.get_contacts()

            contacts_data = []
            for contact in contacts:
                contacts_data.append({
                    "id": contact.id,
                    "first_name": contact.first_name,
                    "last_name": contact.last_name,
                    "username": contact.username,
                    "phone": contact.phone,
                    "is_bot": contact.bot
                })

            with open(os.path.join(backup_dir, "contacts.json"), 'w', encoding='utf-8') as f:
                json.dump(contacts_data, f, ensure_ascii=False, indent=2)

            print(f"{Colors.YELLOW}💬 Сохранение списка чатов...{Colors.RESET}")
            dialogs = await self.manager.client.get_dialogs()

            chats_data = []
            for dialog in dialogs:
                chat_info = {
                    "id": dialog.entity.id,
                    "title": getattr(dialog.entity, 'title', None),
                    "first_name": getattr(dialog.entity, 'first_name', None),
                    "username": getattr(dialog.entity, 'username', None),
                    "type": "group" if hasattr(dialog.entity, 'title') else "private",
                    "participants_count": getattr(dialog.entity, 'participants_count', None)
                }
                chats_data.append(chat_info)

            with open(os.path.join(backup_dir, "chats.json"), 'w', encoding='utf-8') as f:
                json.dump(chats_data, f, ensure_ascii=False, indent=2)

            print(f"{Colors.YELLOW}🔐 Копирование файла сессии...{Colors.RESET}")
            if self.manager.current_session and os.path.exists(f"{self.manager.current_session}.session"):
                import shutil
                shutil.copy2(f"{self.manager.current_session}.session",
                             os.path.join(backup_dir, "session_backup.session"))

            manifest = {
                "backup_type": "full",
                "creation_date": datetime.now().isoformat(),
                "account_id": me.id,
                "account_name": f"{me.first_name} {me.last_name or ''}".strip(),
                "total_contacts": len(contacts_data),
                "total_chats": len(chats_data),
                "files": [
                    "account_info.json",
                    "contacts.json",
                    "chats.json",
                    "session_backup.session"
                ]
            }

            with open(os.path.join(backup_dir, "manifest.json"), 'w', encoding='utf-8') as f:
                json.dump(manifest, f, ensure_ascii=False, indent=2)

            total_size = 0
            for root, dirs, files in os.walk(backup_dir):
                for file in files:
                    total_size += os.path.getsize(os.path.join(root, file))

            success_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               ✅ ПОЛНЫЙ БЭКАП СОЗДАН                                       
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Папка:      {backup_dir:<74}  
  Размер:     {total_size / 1024:.1f} KB{'':<70}  
  Контактов:  {len(contacts_data):<74}  
  Чатов:      {len(chats_data):<74}  
  Файлов:     {len(manifest['files']):<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(success_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка создания бэкапа: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def backup_contacts(self):
        await self.export_contacts()

    async def backup_chat_history(self):
        chat_input = input(f"{Colors.CYAN}💬 Чат для бэкапа (пусто = все чаты): {Colors.RESET}").strip()

        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        backup_dir = f"chat_backup_{timestamp}"
        os.makedirs(backup_dir, exist_ok=True)

        try:
            if chat_input:
                entity = await self.manager.client.get_entity(chat_input)
                await self._backup_single_chat(entity, backup_dir)
            else:
                dialogs = await self.manager.client.get_dialogs(limit=50)

                progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                            💬 Бэкап истории {len(dialogs)} чатов...                        
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(progress_box)

                for i, dialog in enumerate(dialogs, 1):
                    try:
                        await self._backup_single_chat(dialog.entity, backup_dir)
                        chat_name = getattr(dialog.entity, 'title', getattr(dialog.entity, 'first_name', 'Unknown'))
                        print(f"{Colors.GREEN}✅ {i}/{len(dialogs)} Бэкап: {chat_name[:40]}{Colors.RESET}")
                    except Exception as e:
                        print(f"{Colors.RED}❌ {i}/{len(dialogs)} Ошибка: {str(e)[:40]}{Colors.RESET}")

            print(f"{Colors.GREEN}✅ Бэкап чатов завершен в папке: {backup_dir}{Colors.RESET}")

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка бэкапа чатов: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def _backup_single_chat(self, entity, backup_dir):
        chat_name = getattr(entity, 'title', getattr(entity, 'first_name', f"chat_{entity.id}"))
        safe_name = "".join(c for c in chat_name if c.isalnum() or c in (' ', '-', '_')).strip()

        messages = []
        async for message in self.manager.client.iter_messages(entity, limit=500):
            sender_name = "Unknown"
            if message.sender:
                sender_name = getattr(message.sender, 'first_name', 'Unknown')

            msg_data = {
                "id": message.id,
                "date": message.date.isoformat(),
                "sender": sender_name,
                "text": message.text or "[Media]",
                "media_type": "text" if message.text else "media"
            }
            messages.append(msg_data)

        filename = f"{safe_name}_{entity.id}.json"
        with open(os.path.join(backup_dir, filename), 'w', encoding='utf-8') as f:
            json.dump({
                "chat_info": {
                    "id": entity.id,
                    "name": chat_name,
                    "type": "group" if hasattr(entity, 'title') else "private"
                },
                "messages": messages,
                "backup_date": datetime.now().isoformat()
            }, f, ensure_ascii=False, indent=2)

    async def backup_media(self):
        chat_input = input(f"{Colors.CYAN}💬 Чат для бэкапа медиа: {Colors.RESET}").strip()
        if not chat_input:
            return

        limit = int(
            input(f"{Colors.CYAN}📊 Количество сообщений для проверки (по умолчанию 100): {Colors.RESET}") or "100")

        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        media_backup_dir = f"media_backup_{timestamp}"
        os.makedirs(media_backup_dir, exist_ok=True)

        try:
            entity = await self.manager.client.get_entity(chat_input)

            progress_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               🖼️ Бэкап медиа файлов...                                     
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(progress_box)

            backed_up_count = 0
            async for message in self.manager.client.iter_messages(entity, limit=limit):
                if message.media:
                    try:
                        file_path = await self.manager.client.download_media(
                            message.media,
                            file=os.path.join(media_backup_dir, f"media_{message.id}")
                        )
                        if file_path:
                            backed_up_count += 1
                            print(f"{Colors.GREEN}✅ Сохранено: {os.path.basename(file_path)}{Colors.RESET}")
                    except Exception as e:
                        print(f"{Colors.RED}❌ Ошибка загрузки медиа {message.id}: {str(e)[:30]}{Colors.RESET}")

            print(f"{Colors.GREEN}✅ Бэкап медиа завершен: {backed_up_count} файлов в {media_backup_dir}{Colors.RESET}")

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка бэкапа медиа: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def backup_settings(self):
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        settings_file = f"settings_backup_{timestamp}.json"

        try:
            import fgadvmanager_main as main_module

            settings_data = {
                "backup_date": datetime.now().isoformat(),
                "api_id": main_module.Config.API_ID,
                "api_hash": main_module.Config.API_HASH,
                "session_name": main_module.Config.SESSION_NAME,
                "current_session": self.manager.current_session
            }

            with open(settings_file, 'w', encoding='utf-8') as f:
                json.dump(settings_data, f, ensure_ascii=False, indent=2)

            print(f"{Colors.GREEN}✅ Настройки сохранены в {settings_file}{Colors.RESET}")

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка бэкапа настроек: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def manage_backups(self):
        clear_screen()
        backup_folders = []
        for item in os.listdir(''):
            if os.path.isdir(item) and ('backup' in item.lower() or 'backup' in item):
                backup_folders.append(item)

        if not backup_folders:
            no_backups_box = f"""
{Colors.YELLOW}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  📂 Бэкапы не найдены                                      
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(no_backups_box)
        else:
            backups_header = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              📂 УПРАВЛЕНИЕ БЭКАПАМИ ({len(backup_folders)})                      
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(backups_header)

            for i, folder in enumerate(backup_folders, 1):
                total_size = 0
                for root, dirs, files in os.walk(folder):
                    for file in files:
                        total_size += os.path.getsize(os.path.join(root, file))

                creation_time = os.path.getctime(folder)
                creation_date = datetime.fromtimestamp(creation_time).strftime("%d.%m.%Y %H:%M")

                backup_info = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  {i:2d}. 📂 {folder[:40]:<40} | 📅 {creation_date} | 💾 {total_size / 1024:.1f} KB
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
                """
                print(backup_info)

            actions_box = f"""
{Colors.YELLOW}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                     ДЕЙСТВИЯ                                              
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Введите номер для удаления бэкапа или 0 для выхода{'':<38}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(actions_box)

            choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

            if choice == "0":
                return
            elif choice.isdigit() and 1 <= int(choice) <= len(backup_folders):
                folder_to_delete = backup_folders[int(choice) - 1]
                confirm = input(f"{Colors.RED}⚠️ Удалить бэкап {folder_to_delete}? (y/N): {Colors.RESET}").lower()

                if confirm in ['y', 'yes']:
                    try:
                        import shutil
                        shutil.rmtree(folder_to_delete)
                        print(f"{Colors.GREEN}✅ Бэкап {folder_to_delete} удален{Colors.RESET}")
                    except Exception as e:
                        print(f"{Colors.RED}❌ Ошибка удаления: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def restore_backup(self):
        print(f"{Colors.BLUE}🔧 Восстановление - базовая реализация{Colors.RESET}")
        print(f"{Colors.YELLOW}💡 Для восстановления скопируйте файлы из папки бэкапа вручную{Colors.RESET}")
        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def auto_backup_settings(self):
        settings_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              ⏰ АВТОМАТИЧЕСКИЕ БЭКАПЫ                                      
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  🔧 Функция в разработке                                                                  
  💡 Планируется автоматическое создание бэкапов по расписанию                             
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(settings_box)
        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def profile_menu(self):
        while True:
            clear_screen()

            profile_header = f"""
{Colors.MAGENTA}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                 👤 УПРАВЛЕНИЕ ПРОФИЛЕМ                                     
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(profile_header)

            profile_menu_items = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. ℹ️  Информация о профиле{'':<58}  
  2. ✏️  Изменить имя{'':<66}  
  3. 📝 Изменить описание (bio){'':<55}  
  4. 🖼️  Изменить фото профиля{'':<56}  
  5. 👤 Изменить username{'':<61}  
  6. 🔒 Настройки приватности{'':<57}  
  7. 📊 Статистика профиля{'':<59}  
  8. 🔄 Обновить статус{'':<63}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(profile_menu_items)

            choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

            if choice == "1":
                await self.show_profile_info()
            elif choice == "2":
                await self.change_name()
            elif choice == "3":
                await self.change_bio()
            elif choice == "4":
                await self.change_profile_photo()
            elif choice == "5":
                await self.change_username()
            elif choice == "6":
                await self.privacy_settings()
            elif choice == "7":
                await self.profile_statistics()
            elif choice == "8":
                await self.update_status()
            elif choice == "0":
                break

    async def show_profile_info(self):
        clear_screen()

        try:
            me = await self.manager.client.get_me()
            full_user = await self.manager.client(functions.users.GetFullUserRequest(me))

            profile_info = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                ℹ️ ИНФОРМАЦИЯ О ПРОФИЛЕ                                     
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  🆔 ID:           {me.id:<73}  
  👤 Имя:          {me.first_name or 'Не указано':<73}  
  👤 Фамилия:      {me.last_name or 'Не указано':<73}  
  💬 Username:     @{me.username if me.username else 'Не установлен':<72}  
  📞 Телефон:      {me.phone or 'Не указан':<73}  
  📝 Описание:     {getattr(full_user.full_user, 'about', 'Не указано')[:60]:<73}  
  🔒 2FA:          {'Включен' if me.has_password else 'Выключен':<73}  
  ✅ Верифицирован: {'Да' if me.verified else 'Нет':<73}  
  🤖 Бот:          {'Да' if me.bot else 'Нет':<73}  
  📅 Дата рег.:    {me.status.was_online.strftime('%d.%m.%Y') if hasattr(me.status, 'was_online') else 'Неизвестно':<73}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(profile_info)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка получения информации о профиле: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def change_name(self):
        clear_screen()

        current_me = await self.manager.client.get_me()
        print(f"{Colors.BLUE}📝 Текущее имя: {current_me.first_name} {current_me.last_name or ''}{Colors.RESET}")

        new_first_name = input(f"{Colors.CYAN}👤 Новое имя: {Colors.RESET}").strip()
        new_last_name = input(f"{Colors.CYAN}👤 Новая фамилия (опционально): {Colors.RESET}").strip()

        if not new_first_name:
            print(f"{Colors.RED}❌ Имя не может быть пустым{Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
            return

        try:
            await self.manager.client(functions.account.UpdateProfileRequest(
                first_name=new_first_name,
                last_name=new_last_name if new_last_name else ""
            ))

            success_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ✅ ИМЯ ИЗМЕНЕНО                                           
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Новое имя: {new_first_name} {new_last_name}{'':<65}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(success_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка изменения имени: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def change_bio(self):
        new_bio = input(f"{Colors.CYAN}📝 Новое описание (до 70 символов): {Colors.RESET}").strip()

        if len(new_bio) > 70:
            print(f"{Colors.RED}❌ Описание слишком длинное (максимум 70 символов){Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
            return

        try:
            await self.manager.client(functions.account.UpdateProfileRequest(
                about=new_bio
            ))
            print(f"{Colors.GREEN}✅ Описание профиля изменено{Colors.RESET}")

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка изменения описания: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def change_profile_photo(self):
        photo_path = input(f"{Colors.CYAN}🖼️ Путь к новому фото профиля: {Colors.RESET}").strip()

        if not photo_path or not os.path.exists(photo_path):
            print(f"{Colors.RED}❌ Файл не найден{Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
            return

        try:
            await self.manager.client(functions.photos.UploadProfilePhotoRequest(
                file=await self.manager.client.upload_file(photo_path)
            ))
            print(f"{Colors.GREEN}✅ Фото профиля изменено{Colors.RESET}")

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка изменения фото: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def change_username(self):
        new_username = input(f"{Colors.CYAN}👤 Новый username (без @): {Colors.RESET}").strip()

        if not new_username:
            print(f"{Colors.RED}❌ Username не может быть пустым{Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
            return

        try:
            await self.manager.client(functions.account.UpdateUsernameRequest(
                username=new_username
            ))
            print(f"{Colors.GREEN}✅ Username изменен на @{new_username}{Colors.RESET}")

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка изменения username: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def privacy_settings(self):
        privacy_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               🔒 НАСТРОЙКИ ПРИВАТНОСТИ                                     
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  🔧 Функция в разработке                                                                  
  💡 Здесь будут настройки видимости номера, статуса и т.д.                               
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(privacy_box)
        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def profile_statistics(self):
        try:
            me = await self.manager.client.get_me()
            dialogs = await self.manager.client.get_dialogs()
            contacts = await self.manager.client.get_contacts()

            total_sent = 0
            total_received = 0

            for dialog in dialogs[:20]:
                async for message in self.manager.client.iter_messages(dialog.entity, limit=50):
                    if message.sender_id == me.id:
                        total_sent += 1
                    else:
                        total_received += 1

            stats_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               📊 СТАТИСТИКА ПРОФИЛЯ                                       
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  👤 Пользователь:        {me.first_name} {me.last_name or ''}{'':<55}  
  💬 Всего чатов:         {len(dialogs):<64}  
  📞 Контактов:           {len(contacts):<64}  
  📤 Отправлено сообщений: {total_sent:<64}  
  📥 Получено сообщений:  {total_received:<64}  
  📊 Соотношение:         {total_sent / (total_received + 1):.2f}{'':<64}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(stats_box)

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка получения статистики: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def update_status(self):
        status_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                🔄 ОБНОВЛЕНИЕ СТАТУСА                                       
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  1. 🟢 Онлайн{'':<76}  
  2. 🔴 Недавно{'':<75}  
  3. 📱 В мобильном приложении{'':<60}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(status_box)

        choice = input(f"{Colors.CYAN}🎯 Выберите статус: {Colors.RESET}").strip()

        try:
            if choice == "1":
                await self.manager.client(functions.account.UpdateStatusRequest(
                    offline=False
                ))
                print(f"{Colors.GREEN}✅ Статус изменен на 'Онлайн'{Colors.RESET}")
            elif choice == "2":
                await self.manager.client(functions.account.UpdateStatusRequest(
                    offline=True
                ))
                print(f"{Colors.GREEN}✅ Статус изменен на 'Недавно'{Colors.RESET}")
            else:
                print(f"{Colors.YELLOW}💡 Другие статусы в разработке{Colors.RESET}")

        except Exception as e:
            print(f"{Colors.RED}❌ Ошибка изменения статуса: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def settings_menu(self):
        while True:
            clear_screen()

            settings_header = f"""
{Colors.YELLOW}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                     ⚙️ НАСТРОЙКИ                                           
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(settings_header)

            settings_menu_items = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 🔑 Настройки API{'':<65}  
  2. 📁 Управление сессиями{'':<59}  
  3. 🎨 Настройки интерфейса{'':<58}  
  4. 📊 Настройки логирования{'':<57}  
  5. 🔔 Настройки уведомлений{'':<56}  
  6. 🌐 Настройки прокси{'':<62}  
  7. 📥 Импорт/Экспорт настроек{'':<53}  
  8. 🔄 Сброс к заводским{'':<61}  
  9. ℹ️  О программе{'':<67}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
            """
            print(settings_menu_items)

            choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

            if choice == "1":
                await self.api_settings()
            elif choice == "2":
                await self.session_settings()
            elif choice == "3":
                await self.interface_settings()
            elif choice == "4":
                await self.logging_settings()
            elif choice == "5":
                await self.notification_settings()
            elif choice == "6":
                await self.proxy_settings()
            elif choice == "7":
                await self.import_export_settings()
            elif choice == "8":
                await self.reset_settings()
            elif choice == "9":
                await self.about_program()
            elif choice == "0":
                break

    async def api_settings(self):
        clear_screen()

        import fgadvmanager_main as main_module

        current_api_info = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                🔑 ТЕКУЩИЕ API НАСТРОЙКИ                                     
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  API ID:   {main_module.Config.API_ID or 'Не настроен':<74}  
  API Hash: {'***' + str(main_module.Config.API_HASH)[-10:] if main_module.Config.API_HASH else 'Не настроен':<74}  
  Статус:   {'✅ Активен' if main_module.Config.validate_api_credentials() else '❌ Не настроен':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(current_api_info)

        api_menu = f"""
{Colors.YELLOW}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                     ДЕЙСТВИЯ                                              
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  1. 🔄 Обновить API данные{'':<61}  
  2. 💾 Сохранить настройки{'':<60}  
  3. 🔍 Проверить валидность{'':<59}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(api_menu)

        choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

        if choice == "1":
            await self.manager.setup_credentials()
        elif choice == "2":
            main_module.Config.save_to_file()
            print(f"{Colors.GREEN}✅ Настройки сохранены{Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
        elif choice == "3":
            if main_module.Config.validate_api_credentials():
                print(f"{Colors.GREEN}✅ API данные валидны{Colors.RESET}")
            else:
                print(f"{Colors.RED}❌ API данные некорректны{Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def session_settings(self):
        clear_screen()

        session_info = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               📁 УПРАВЛЕНИЕ СЕССИЯМИ                                       
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Текущая сессия: {self.manager.current_session or 'Не выбрана':<65}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(session_info)

        session_menu = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 📋 Список всех сессий{'':<59}  
  2. ➕ Создать новую сессию{'':<58}  
  3. 🔄 Переключить сессию{'':<60}  
  4. 🗑️ Удалить сессию{'':<64}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(session_menu)

        choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

        if choice == "1":
            await self.manager.validate_all_sessions()
        elif choice == "2":
            await self.manager.create_new_session()
        elif choice == "3":
            if not await self.manager.select_session():
                print(f"{Colors.RED}❌ Не удалось переключить сессию{Colors.RESET}")
        elif choice == "4":
            await self.delete_session()

    async def delete_session(self):
        import glob
        session_files = glob.glob("*.session")

        if not session_files:
            print(f"{Colors.YELLOW}📭 Файлы сессий не найдены{Colors.RESET}")
            input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")
            return

        print(f"{Colors.BLUE}📋 Доступные сессии:{Colors.RESET}")
        for i, session_file in enumerate(session_files, 1):
            session_name = session_file.replace(".session", "")
            print(f"{Colors.CYAN}{i}. {session_name}{Colors.RESET}")

        choice = input(f"{Colors.CYAN}🗑️ Номер сессии для удаления (0 - отмена): {Colors.RESET}").strip()

        if choice == "0" or not choice.isdigit():
            return

        choice = int(choice)
        if 1 <= choice <= len(session_files):
            session_to_delete = session_files[choice - 1]
            session_name = session_to_delete.replace(".session", "")

            confirm = input(f"{Colors.RED}⚠️ Удалить сессию '{session_name}'? (y/N): {Colors.RESET}").lower()
            if confirm in ['y', 'yes']:
                try:
                    os.remove(session_to_delete)
                    print(f"{Colors.GREEN}✅ Сессия '{session_name}' удалена{Colors.RESET}")
                except Exception as e:
                    print(f"{Colors.RED}❌ Ошибка удаления: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def interface_settings(self):
        interface_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              🎨 НАСТРОЙКИ ИНТЕРФЕЙСА                                      
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  🔧 Функция в разработке                                                                  
  💡 Планируется настройка цветов, языка, темы оформления                                  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(interface_box)
        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def logging_settings(self):
        logging_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              📊 НАСТРОЙКИ ЛОГИРОВАНИЯ                                     
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  📄 Файл логов:          fgadvmanager.log{'':<54}  
  📊 Уровень логирования: INFO{'':<65}  
  💾 Размер файла:        {os.path.getsize('fgadvmanager.log') / 1024:.1f} KB{'':<58}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(logging_box)

        log_menu = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
  1. 📖 Просмотреть логи{'':<62}  
  2. 🗑️ Очистить логи{'':<65}  
  3. 📁 Открыть папку с логами{'':<57}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(log_menu)

        choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

        if choice == "1":
            try:
                with open('fgadvmanager.log', 'r', encoding='utf-8') as f:
                    logs = f.readlines()

                print(f"\n{Colors.BLUE}📖 Последние 20 записей логов:{Colors.RESET}")
                for line in logs[-20:]:
                    print(f"{Colors.GRAY}{line.strip()}{Colors.RESET}")
            except Exception as e:
                print(f"{Colors.RED}❌ Ошибка чтения логов: {e}{Colors.RESET}")

        elif choice == "2":
            confirm = input(f"{Colors.RED}⚠️ Очистить все логи? (y/N): {Colors.RESET}").lower()
            if confirm in ['y', 'yes']:
                try:
                    with open('fgadvmanager.log', 'w') as f:
                        f.write("")
                    print(f"{Colors.GREEN}✅ Логи очищены{Colors.RESET}")
                except Exception as e:
                    print(f"{Colors.RED}❌ Ошибка очистки: {e}{Colors.RESET}")

        elif choice == "3":
            import subprocess
            import platform as plt
            try:
                if plt.system() == "Windows":
                    os.startfile("")
                elif plt.system() == "Darwin":
                    subprocess.run(["open", "."])
                else:
                    subprocess.run(["xdg-open", "."])
                print(f"{Colors.GREEN}✅ Папка открыта{Colors.RESET}")
            except Exception as e:
                print(f"{Colors.RED}❌ Ошибка открытия папки: {e}{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def notification_settings(self):
        notification_box = f"""
{Colors.MAGENTA}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                              🔔 НАСТРОЙКИ УВЕДОМЛЕНИЙ                                     
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  🔧 Функция в разработке                                                                  
  💡 Планируется настройка звуковых и визуальных уведомлений                              
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(notification_box)
        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def proxy_settings(self):
        proxy_box = f"""
{Colors.CYAN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                               🌐 НАСТРОЙКИ ПРОКСИ                                         
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  🔧 Функция в разработке                                                                  
  💡 Планируется поддержка HTTP/SOCKS прокси                                              
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(proxy_box)
        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def import_export_settings(self):
        import_export_box = f"""
{Colors.GREEN}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                            📥 ИМПОРТ/ЭКСПОРТ НАСТРОЕК                                      
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  1. 📤 Экспортировать настройки{'':<54}  
  2. 📥 Импортировать настройки{'':<55}  
  0. ⬅️  Назад{'':<74}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(import_export_box)

        choice = input(f"{Colors.CYAN}🎯 Выбор: {Colors.RESET}").strip()

        if choice == "1":
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            filename = f"settings_export_{timestamp}.json"

            try:
                import fgadvmanager_main as main_module
                settings_data = {
                    "export_date": datetime.now().isoformat(),
                    "api_id": main_module.Config.API_ID,
                    "api_hash": main_module.Config.API_HASH,
                    "session_name": main_module.Config.SESSION_NAME,
                    "current_session": self.manager.current_session
                }

                with open(filename, 'w', encoding='utf-8') as f:
                    json.dump(settings_data, f, ensure_ascii=False, indent=2)

                print(f"{Colors.GREEN}✅ Настройки экспортированы в {filename}{Colors.RESET}")
            except Exception as e:
                print(f"{Colors.RED}❌ Ошибка экспорта: {e}{Colors.RESET}")

        elif choice == "2":
            filename = input(f"{Colors.CYAN}📁 Путь к файлу настроек: {Colors.RESET}").strip()

            if filename and os.path.exists(filename):
                try:
                    with open(filename, 'r', encoding='utf-8') as f:
                        settings_data = json.load(f)

                    import fgadvmanager_main as main_module
                    main_module.Config.API_ID = settings_data.get("api_id")
                    main_module.Config.API_HASH = settings_data.get("api_hash")
                    main_module.Config.save_to_file()

                    print(f"{Colors.GREEN}✅ Настройки импортированы{Colors.RESET}")
                except Exception as e:
                    print(f"{Colors.RED}❌ Ошибка импорта: {e}{Colors.RESET}")
            else:
                print(f"{Colors.RED}❌ Файл не найден{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def reset_settings(self):
        warning_box = f"""
{Colors.RED}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                ⚠️ СБРОС НАСТРОЕК                                           
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  Это действие удалит ВСЕ настройки и вернет программу к заводским значениям!              
  API данные и сессии будут удалены БЕЗВОЗВРАТНО!                                          
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(warning_box)

        confirm = input(f"{Colors.RED}⚠️ Подтвердите сброс настроек (введите 'RESET'): {Colors.RESET}")

        if confirm == "RESET":
            try:
                if os.path.exists("config.json"):
                    os.remove("config.json")

                with open("fgadvmanager.log", 'w') as f:
                    f.write("")

                print(f"{Colors.GREEN}✅ Настройки сброшены к заводским{Colors.RESET}")
                print(f"{Colors.YELLOW}💡 Перезапустите программу для применения изменений{Colors.RESET}")

            except Exception as e:
                print(f"{Colors.RED}❌ Ошибка сброса настроек: {e}{Colors.RESET}")
        else:
            print(f"{Colors.YELLOW}❌ Сброс отменен{Colors.RESET}")

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")

    async def about_program(self):
        about_box = f"""
{Colors.MAGENTA}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                  ℹ️ О ПРОГРАММЕ                                           
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  📱 Название:     FGADVManager{'':<62}  
  📊 Версия:       2.0.0{'':<71}  
  👥 Разработчики: @FGBruh & @BruhYouTeeth{'':<50}  
  🐍 Python:       {'.'.join(map(str, sys.version_info[:3])):<71}  
  📚 Библиотеки:   Telethon, Colorama{'':<58}  
  📅 Дата:         {datetime.now().strftime('%d.%m.%Y'):<71}  
  🌐 GitHub:       Пока пре релиз, на релизе выложу на гитхаб{'':<48}  
  📧 Поддержка:    @FGBruh в Telegram{'':<58}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(about_box)

        features_box = f"""
{Colors.BLUE}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
                                 🚀 ОСНОВНЫЕ ФУНКЦИИ                                       
┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
  ✅ Управление сессиями Telegram{'':<54}  
  ✅ Отправка и массовая рассылка сообщений{'':<46}  
  ✅ Управление группами и каналами{'':<54}  
  ✅ Работа с контактами и медиа{'':<58}  
  ✅ Автоматизация и планировщик{'':<58}  
  ✅ Статистика и аналитика{'':<62}  
  ✅ Резервное копирование данных{'':<56}  
  ✅ Управление профилем{'':<64}  
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛{Colors.RESET}
        """
        print(features_box)

        input(f"{Colors.YELLOW}Нажмите Enter для продолжения...{Colors.RESET}")').decode('utf-8'))